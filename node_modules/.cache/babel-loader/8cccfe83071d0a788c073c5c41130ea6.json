{"remainingRequest":"/home/drrny/Workspace/justgimmeapassword/v2/node_modules/babel-loader/lib/index.js!/home/drrny/Workspace/justgimmeapassword/v2/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/drrny/Workspace/justgimmeapassword/v2/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/drrny/Workspace/justgimmeapassword/v2/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/drrny/Workspace/justgimmeapassword/v2/src/components/Generator.vue?vue&type=template&id=4e3df153&scoped=true","dependencies":[{"path":"/home/drrny/Workspace/justgimmeapassword/v2/src/components/Generator.vue","mtime":1648054715974},{"path":"/home/drrny/Workspace/justgimmeapassword/v2/babel.config.js","mtime":1648052284624},{"path":"/home/drrny/Workspace/justgimmeapassword/v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/drrny/Workspace/justgimmeapassword/v2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/drrny/Workspace/justgimmeapassword/v2/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/drrny/Workspace/justgimmeapassword/v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/drrny/Workspace/justgimmeapassword/v2/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHdpdGhEaXJlY3RpdmVzIGFzIF93aXRoRGlyZWN0aXZlcywgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7CmltcG9ydCBfaW1wb3J0c18wIGZyb20gJy4uL2Fzc2V0cy9yZWRvLnN2Zyc7CmltcG9ydCBfaW1wb3J0c18xIGZyb20gJy4uL2Fzc2V0cy9jbGlwYm9hcmQuc3ZnJzsKCnZhciBfd2l0aFNjb3BlSWQgPSBmdW5jdGlvbiBfd2l0aFNjb3BlSWQobikgewogIHJldHVybiBfcHVzaFNjb3BlSWQoImRhdGEtdi00ZTNkZjE1MyIpLCBuID0gbigpLCBfcG9wU2NvcGVJZCgpLCBuOwp9OwoKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJmbGV4Igp9Owp2YXIgX2hvaXN0ZWRfMiA9IHsKICBjbGFzczogImZsZXggY29udHJvbHMiCn07Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW1nIiwgewogICAgY2xhc3M6ICJidG4taWNvbiIsCiAgICBzcmM6IF9pbXBvcnRzXzAKICB9LCBudWxsLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF80ID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJzcGFuIiwgbnVsbCwgIkdpbW1lIGEgZGlmZmVyZW50IG9uZSIsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzUgPSBbX2hvaXN0ZWRfMywgX2hvaXN0ZWRfNF07Cgp2YXIgX2hvaXN0ZWRfNiA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW1nIiwgewogICAgY2xhc3M6ICJidG4taWNvbiIsCiAgICBzcmM6IF9pbXBvcnRzXzEKICB9LCBudWxsLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF83ID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJzcGFuIiwgbnVsbCwgIkNvcHkgdG8gY2xpcGJvYXJkIiwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfOCA9IFtfaG9pc3RlZF82LCBfaG9pc3RlZF83XTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzEsIFtfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW5wdXQiLCB7CiAgICBpZDogImdlbmVyYXRvciIsCiAgICB0eXBlOiAidGV4dCIsCiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJG9wdGlvbnMucGFzc3dvcmRWYWx1ZSA9ICRldmVudDsKICAgIH0pCiAgfSwgbnVsbCwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICksIFtbX3ZNb2RlbFRleHQsICRvcHRpb25zLnBhc3N3b3JkVmFsdWVdXSldKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMiwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImJ1dHRvbiIsIHsKICAgIGNsYXNzOiAiYnRuIiwKICAgIGlkOiAicmVnZW5lcmF0ZSIsCiAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLnNldFBhc3N3b3JkICYmICRvcHRpb25zLnNldFBhc3N3b3JkLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCBfaG9pc3RlZF81KSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnV0dG9uIiwgewogICAgY2xhc3M6ICJidG4iLAogICAgaWQ6ICJjb3B5IiwKICAgIG9uQ2xpY2s6IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuY29weVBhc3N3b3JkICYmICRvcHRpb25zLmNvcHlQYXNzd29yZC5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgX2hvaXN0ZWRfOCldKV0sIDY0CiAgLyogU1RBQkxFX0ZSQUdNRU5UICovCiAgKTsKfQ=="},{"version":3,"sources":["/home/drrny/Workspace/justgimmeapassword/v2/src/components/Generator.vue"],"names":[],"mappings":";OAM4B,U,MAAwB,oB;OAIxB,U,MAA6B,yB;;;;;;;AATlD,EAAA,KAAK,EAAC;;;AAGN,EAAA,KAAK,EAAC;;;;sBAEP,mBAAA,CAAiD,KAAjD,EAAiD;AAA5C,IAAA,KAAK,EAAC,UAAsC;AAA3B,IAAA,GAAwB,EAAxB;AAA2B,GAAjD,E,IAAA,E;;AAAA,G;;;;sBACA,mBAAA,CAAkC,MAAlC,EAAkC,IAAlC,EAAM,uBAAN,EAA2B,CAAA;AAAA;AAA3B,G;;;kBADA,U,EACA,U;;;sBAGA,mBAAA,CAAsD,KAAtD,EAAsD;AAAjD,IAAA,KAAK,EAAC,UAA2C;AAAhC,IAAA,GAA6B,EAA7B;AAAgC,GAAtD,E,IAAA,E;;AAAA,G;;;;sBACA,mBAAA,CAA8B,MAA9B,EAA8B,IAA9B,EAAM,mBAAN,EAAuB,CAAA;AAAA;AAAvB,G;;;kBADA,U,EACA,U;;6DAVJ,mBAAA,CAEM,KAFN,EAAA,UAAA,EAEM,C,gBADJ,mBAAA,CAA4D,OAA5D,EAA4D;AAArD,IAAA,EAAE,EAAC,WAAkD;AAAtC,IAAA,IAAI,EAAC,MAAiC;;aAAjB,QAAA,CAAA,a,GAAa,M;;AAAI,GAA5D,E,IAAA,E;;AAAA,G,iBAA2C,QAAA,CAAA,a,GACvC,CAFN,C,EAGA,mBAAA,CAUM,KAVN,EAAA,UAAA,EAUM,CATJ,mBAAA,CAGS,QAHT,EAGS;AAHD,IAAA,KAAK,EAAC,KAGL;AAHW,IAAA,EAAE,EAAC,YAGd;AAH4B,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,WAAA,IAAA,QAAA,CAAA,WAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAGjC,GAHT,E,UAAA,CASI,EALJ,mBAAA,CAGS,QAHT,EAGS;AAHD,IAAA,KAAK,EAAC,KAGL;AAHW,IAAA,EAAE,EAAC,MAGd;AAHsB,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,YAAA,IAAA,QAAA,CAAA,YAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAG3B,GAHT,E,UAAA,CAKI,CAVN,C","sourcesContent":["<template>\n  <div class=\"flex\">\n    <input id=\"generator\" type=\"text\" v-model=\"passwordValue\" />\n  </div>\n  <div class=\"flex controls\">\n    <button class=\"btn\" id=\"regenerate\" @click=\"setPassword\">\n      <img class=\"btn-icon\" src=\"../assets/redo.svg\" />\n      <span>Gimme a different one</span>\n    </button>\n    <button class=\"btn\" id=\"copy\" @click=\"copyPassword\">\n      <img class=\"btn-icon\" src=\"../assets/clipboard.svg\" />\n      <span>Copy to clipboard</span>\n    </button>\n\n  </div>\n</template>\n\n<script>\nimport { useToast } from \"vue-toastification\";\nimport { generateNewPassword } from \"../words\"\n\nexport default {\n  name: \"Generator\",\n  props: {},\n  data() {\n    return {\n      password: \"\",\n      toast: useToast(),\n    };\n  },\n  mounted() {\n    if (this.password === \"\") {\n      this.setPassword();\n    }\n  },\n  computed: {\n    passwordValue: {\n      get() {\n        return this.password;\n      },\n      set(val) {\n        this.password = val;\n      },\n    },\n  },\n  methods: {\n    setPassword() {\n      this.password = generateNewPassword();\n      // fetch('/generate')\n      //   .then((response) => response.json())\n      //   .then((data) => {\n      //     this.password = data.result || \"\";\n      //   });\n    },\n    copyPassword() {\n      navigator.clipboard.writeText(this.password).then(\n        () => {\n          this.toast.success(\"Copied to clipboard\");\n        },\n        () => {\n          console.error(\"Failed to copy to clipboard\");\n        }\n      );\n    },\n    updatePassword(event) {\n      console.log(event);\n    },\n  },\n};\n</script>\n\n<style scoped>\n#generator {\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  box-sizing: border-box;\n  font-family: \"Raleway\", sans-serif;\n  width: 100%;\n  text-align: center;\n  font-size: 2em;\n  border-radius: 10px;\n}\n\n.btn-icon {\n  vertical-align: middle;\n  width: 15px;\n  margin: -3px 10px 0px 5px;\n}\n\n.controls > .btn {\n  width: 100%;\n  font-size: 18px;\n  padding: 5px 10px;\n  margin: 8px 5px;\n  font-family: \"Raleway\", sans-serif;\n  background: #3366cc;\n  color: white;\n  border: 1px ridge white;\n  cursor: pointer;\n}\n\n@media (max-width: 1024px) {\n  #generator {\n    font-size: 1.5em;\n  }\n}\n</style>\n"],"sourceRoot":""}]}